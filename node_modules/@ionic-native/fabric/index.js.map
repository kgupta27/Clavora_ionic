{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/fabric/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface Attributes {\n  [index: string]: String;\n}\n\n/**\n * @name Crashlytics\n * @description\n * API for interacting with the Crashlytics kit.\n *\n * https://docs.fabric.io/crashlytics/index.html\n *\n * @usage\n * ```typescript\n * import { Crashlytics } from '@ionic-native/fabric';\n *\n *\n * constructor(private crashlytics: Crashlytics) { }\n *\n * ...\n *\n * try {\n *  await this.loadData();\n * } catch (e) {\n *  this.crashlytics.addLog(\"Error while loading data\");\n *  this.crashlytics.sendNonFatalCrash(e.message || e);\n * }\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Crashlytics',\n  plugin: 'cordova-fabric-plugin',\n  pluginRef: 'window.fabric.Crashlytics',\n  repo: 'https://www.npmjs.com/package/cordova-fabric-plugin',\n  install:\n    'ionic cordova plugin add cordova-fabric-plugin --variable FABRIC_API_KEY=XXX --variable FABRIC_API_SECRET=xxx',\n  installVariables: ['FABRIC_API_KEY', 'FABRIC_API_SECRET'],\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class Crashlytics extends IonicNativePlugin {\n  /**\n   * Add logging that will be sent with your crash data. This logging will not show up\n   * in the system.log and will only be visible in your Crashlytics dashboard.\n   * @param message {string}\n   */\n  @Cordova({ sync: true })\n  addLog(message: string): void {\n    return;\n  }\n\n  /**\n   * Used to simulate a native platform crash (useful for testing Crashlytics logging).\n   */\n  @Cordova({ sync: true })\n  sendCrash(): void {\n    return;\n  }\n\n  /**\n   * Used to log a non-fatal error message (Android only).\n   */\n  @Cordova({ sync: true })\n  sendNonFatalCrash(message: string, stacktrace?: any): void {\n    return;\n  }\n\n  /**\n   * Used to record a non-fatal error message (iOS only).\n   */\n  @Cordova({ sync: true })\n  recordError(message: string, code: number): void {\n    return;\n  }\n\n  /**\n   * Sets the user's identifier for logging to Crashlytics backend.\n   */\n  @Cordova({ sync: true })\n  setUserIdentifier(userId: string): void {\n    return;\n  }\n\n  /**\n   * Sets the user's name for logging to Crashlytics backend.\n   */\n  @Cordova({ sync: true })\n  setUserName(userName: string): void {\n    return;\n  }\n\n  /**\n   * Sets the user's email address for logging to Crashlytics backend.\n   */\n  @Cordova({ sync: true })\n  setUserEmail(email: string): void {\n    return;\n  }\n\n  /**\n   * Sets a custom key/value pair for logging to Crashlytics backend.\n   */\n  @Cordova({ sync: true })\n  setStringValueForKey(value: string, key: string): void {\n    return;\n  }\n\n  /**\n   * Sets a custom key/value pair for logging to Crashlytics backend.\n   */\n  @Cordova({ sync: true })\n  setIntValueForKey(value: number, key: string): void {\n    return;\n  }\n\n  /**\n   * Sets a custom key/value pair for logging to Crashlytics backend.\n   */\n  @Cordova({ sync: true })\n  setBoolValueForKey(value: boolean, key: string): void {\n    return;\n  }\n\n  /**\n   * Sets a custom key/value pair for logging to Crashlytics backend.\n   */\n  @Cordova({ sync: true })\n  setFloatValueForKey(value: number, key: string): void {\n    return;\n  }\n}\n\n/**\n * @name Answers\n * @description\n * API for interacting with the Answers kit.\n *\n * https://docs.fabric.io/crashlytics/index.html\n *\n * @usage\n * ```typescript\n * import { Answers } from '@ionic-native/fabric';\n *\n *\n * constructor(private answers: Answers) { }\n *\n * ...\n *\n * this.answers.sendCustomEvent('SomeCustomEvent', { some: \"attributes\" })\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Answers',\n  plugin: 'cordova-fabric-plugin',\n  pluginRef: 'window.fabric.Answers',\n  repo: 'https://www.npmjs.com/package/cordova-fabric-plugin',\n  install:\n    'ionic cordova plugin add cordova-fabric-plugin --variable FABRIC_API_KEY=XXX --variable FABRIC_API_SECRET=xxx',\n  installVariables: ['FABRIC_API_KEY', 'FABRIC_API_SECRET'],\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class Answers extends IonicNativePlugin {\n  /**\n   * Sends the Purchase tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#purchase\n   *\n   * @param itemPrice The item's amount in the currency specified.\n   * @param currency The ISO4217 currency code.\n   * @param success Was the purchase completed succesfully?\n   * @param itemName The human-readable name for the item.\n   * @param itemType The category the item falls under.\n   * @param itemId A unique identifier used to track the item.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendPurchase(\n    itemPrice?: number,\n    currency?: string,\n    success?: boolean,\n    itemName?: string,\n    itemType?: string,\n    itemId?: string,\n    attributes?: Attributes\n  ): void {\n    return;\n  }\n\n  /**\n   * Sends the Add To Cart tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#add-to-cart\n   *\n   * @param itemPrice The item's amount in the currency specified.\n   * @param currency The ISO4217 currency code.\n   * @param itemName The human-readable name for the item.\n   * @param itemType The category the item falls under.\n   * @param itemId A unique identifier used to track the item.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendAddToCart(\n    itemPrice?: number,\n    currency?: string,\n    itemName?: string,\n    itemType?: string,\n    itemId?: string,\n    attributes?: Attributes\n  ): void {\n    return;\n  }\n\n  /**\n   * Sends the Start Checkout tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#start-checkout\n   *\n   * @param totalPrice The total price of all items in cart in the currency specified.\n   * @param currency The ISO4217 currency code.\n   * @param itemCount The count of items in cart.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendStartCheckout(\n    totalPrice?: number,\n    currency?: string,\n    itemCount?: number,\n    attributes?: Attributes\n  ): void {\n    return;\n  }\n\n  /**\n   * Sends the Search tracking event.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#search\n   *\n   * @param query What the user is searching for.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendSearch(query: string, attributes?: Attributes): void {\n    return;\n  }\n\n  /**\n   * Sends the Share tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#share\n   *\n   * @param method The method used to share content.\n   * @param contentName The description of the content.\n   * @param contentType The type or genre of content.\n   * @param contentId A unique key identifying the content.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendShare(\n    method?: string,\n    contentName?: string,\n    contentType?: string,\n    contentId?: string,\n    attributes?: Attributes\n  ): void {\n    return;\n  }\n\n  /**\n   * Sends the Rated Content tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#rated-content\n   *\n   * @param rating An integer rating of the content.\n   * @param contentName The human-readable name of content.\n   * @param contentType The category your item falls under.\n   * @param contentId A unique identifier used to track the item.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendRatedContent(\n    rating?: number,\n    contentName?: string,\n    contentType?: string,\n    contentId?: string,\n    attributes?: Attributes\n  ): void {\n    return;\n  }\n\n  /**\n   * Sends the Sign Up tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#sign-up\n   *\n   * @param method An optional description of the sign up method (Twitter, Facebook, etc.); defaults to \"Direct\".\n   * @param success An optional flag that indicates sign up success; defaults to true.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendSignUp(\n    method?: string,\n    success?: boolean,\n    attributes?: Attributes\n  ): void {\n    return;\n  }\n\n  /**\n   * Sends the Log In tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#log-in\n   *\n   * @param method An optional description of the sign in method (Twitter, Facebook, etc.); defaults to \"Direct\".\n   * @param success An optional flag that indicates sign in success; defaults to true.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendLogIn(method?: string, success?: boolean, attributes?: Attributes): void {\n    return;\n  }\n\n  /**\n   * Sends the Invite tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#invite\n   *\n   * @param method An optional description of the sign in method (Twitter, Facebook, etc.); defaults to \"Direct\".\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendInvite(method?: string, attributes?: Attributes): void {\n    return;\n  }\n\n  /**\n   * Sends the Level Start tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#level-start\n   *\n   * @param levelName String key describing the level.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendLevelStart(levelName?: string, attributes?: Attributes): void {\n    return;\n  }\n\n  /**\n   * Sends the Level End tracking event.\n   *\n   * All parameters are optional.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#level-end\n   *\n   * @param levelName String key describing the level.\n   * @param score The score for this level.\n   * @param success Completed the level or failed trying.\n   * @param attributes Any additional user-defined attributes to be logged.\n   */\n  @Cordova({ sync: true })\n  sendLevelEnd(\n    levelName?: string,\n    score?: number,\n    success?: boolean,\n    attributes?: Attributes\n  ): void {\n    return;\n  }\n\n  /**\n   * Send the Content View tracking event.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#content-view\n   */\n  @Cordova({ sync: true })\n  sendContentView(\n    name: string,\n    type?: string,\n    id?: string,\n    attributes?: Attributes\n  ): void {\n    return;\n  }\n\n  /**\n   * Shortcut for sendContentView(...) using type of \"Screen\".\n   */\n  @Cordova({ sync: true })\n  sendScreenView(name: string, id: string, attributes?: Attributes): void {\n    return;\n  }\n\n  /**\n   * Send a custom tracking event with the given name.\n   *\n   * https://docs.fabric.io/android/answers/answers-events.html#custom-event\n   */\n  @Cordova({ sync: true })\n  sendCustomEvent(name: string, attributes?: Attributes): void {\n    return;\n  }\n}\n"]}