{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/firebase-analytics/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCjC,qCAAiB;;;;IACtD;;;;;;OAMG;;;;;;;;IAEH,oCAAQ;;;;;;;cAAC,IAAY,EAAE,MAAW;QAChC,MAAM,CAAC;KACR;IAED;;;;;OAKG;;;;;;;IAEH,qCAAS;;;;;;cAAC,EAAU;QAClB,MAAM,CAAC;KACR;IAED;;;;;;OAMG;;;;;;;;IAEH,2CAAe;;;;;;;cAAC,IAAY,EAAE,KAAa;QACzC,MAAM,CAAC;KACR;IAED;;;;OAIG;;;;;;IAEH,sCAAU;;;;;cAAC,OAAgB;QACzB,MAAM,CAAC;KACR;IAED;;;;;OAKG;;;;;;;IAEH,4CAAgB;;;;;;cAAC,IAAY;QAC3B,MAAM,CAAC;KACR;;gBAxDF,UAAU;;;QASR,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;qDAGvB;;QAQA,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;sDAGvB;;QASA,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;4DAGvB;;QAOA,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;uDAGvB;;QAQA,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;6DAGvB;;;;;;;;;;;;;;;;;;;;;;;;;;IAvDU,iBAAiB;QAR7B,MAAM,CAAC;YACN,UAAU,EAAE,mBAAmB;YAC/B,MAAM,EAAE,mCAAmC;YAC3C,SAAS,EAAE,oCAAoC;YAC/C,IAAI,EAAE,iEAAiE;YACvE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,iBAAiB,EAwD7B;4BA5FD;EAoCuC,iBAAiB;SAA3C,iBAAiB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @beta\n * @name Firebase Analytics\n * @description\n * Cordova plugin for Firebase Analytics\n *\n * Go to firebase console and export google-services.json and GoogleService-Info.plist. Put those files into the root of your cordova app folder.\n *\n * NOTE: on iOS in order to collect demographic, age, gender data etc. you should additionally include AdSupport.framework into your project.\n *\n * @usage\n * ```typescript\n * import { FirebaseAnalytics } from '@ionic-native/firebase-analytics';\n *\n *\n * constructor(private firebaseAnalytics: FirebaseAnalytics) { }\n *\n * ...\n *\n * this.firebaseAnalytics.logEvent('page_view', {page: \"dashboard\"})\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'FirebaseAnalytics',\n  plugin: 'cordova-plugin-firebase-analytics',\n  pluginRef: 'cordova.plugins.firebase.analytics',\n  repo: 'https://github.com/chemerisuk/cordova-plugin-firebase-analytics',\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class FirebaseAnalytics extends IonicNativePlugin {\n  /**\n   * Logs an app event.\n   * Be aware of automatically collected events.\n   * @param {string} name The name of the event\n   * @param {any} params Some param to configure something\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova({ sync: true })\n  logEvent(name: string, params: any): Promise<any> {\n    return;\n  }\n\n  /**\n   * Sets the user ID property.\n   * This feature must be used in accordance with Google's Privacy Policy.\n   * @param {string} id The user ID\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova({ sync: true })\n  setUserId(id: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * This feature must be used in accordance with Google's Privacy Policy.\n   * Be aware of automatically collected user properties.\n   * @param {string} name The property name\n   * @param {string} value The property value\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova({ sync: true })\n  setUserProperty(name: string, value: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Sets whether analytics collection is enabled for this app on this device.\n   * @param {boolean} enabled\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova({ sync: true })\n  setEnabled(enabled: boolean): Promise<any> {\n    return;\n  }\n\n  /**\n   * Sets the current screen name, which specifies the current visual context in your app.\n   * This helps identify the areas in your app where users spend their time and how they interact with your app.\n   * @param {string} name The name of the screen\n   * @return {Promise<any>} Returns a promise\n   */\n  @Cordova({ sync: true })\n  setCurrentScreen(name: string): Promise<any> {\n    return;\n  }\n}\n"]}